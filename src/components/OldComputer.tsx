/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: SketchyBot (https://sketchfab.com/SketchyB0t_3D_Fabrication)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/old-computer-v2-b389fddc31ea459597fb3e1d23dcb545
Title: Old Computer V2
*/

import * as THREE from "three";
import { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Computer1_Computer001_0: THREE.Mesh;
    Computer1_Screen001_0: THREE.Mesh;
  };
  materials: {
    ["Computer.001"]: THREE.MeshStandardMaterial;
    ["Screen.001"]: THREE.MeshStandardMaterial;
  };
};

function OldComputer(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group<THREE.Object3DEventMap>>(null);
  const light = useRef(null);
  const { nodes, materials } = useGLTF(
    "/models_3d/old_computer.glb"
  ) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[1.576, 0, 0]} scale={0.878}>
        <group scale={0.01}>
          <group rotation={[Math.PI, 0, -Math.PI / 2]} scale={100}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Computer1_Computer001_0.geometry}
              material={materials["Computer.001"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Computer1_Screen001_0.geometry}
              material={materials["Screen.001"]}
            />
          </group>
        </group>
        <spotLight
          angle={0.5}
          penumbra={0.5}
          ref={light}
          castShadow
          intensity={10}
          shadow-mapSize={1024}
          shadow-bias={-0.001}
        >
          <orthographicCamera
            attach="shadow-camera"
            args={[-10, 10, -10, 10, 0.1, 50]}
          />
        </spotLight>
      </group>
    </group>
  );
}

useGLTF.preload("/models_3d/old_computer.glb");
export default OldComputer;
